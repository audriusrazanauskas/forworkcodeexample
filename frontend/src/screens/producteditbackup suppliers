import axios from "axios";
import React, { useState, useEffect } from "react";
import styled from "styled-components";
import { Link, useParams, useNavigate } from "react-router-dom";
import { Form, Button, Tabs, Tab, Table } from "react-bootstrap";
import { useDispatch, useSelector } from "react-redux";
import Message from "../components/Message";
import Loader from "../components/Loader";
import FormContainer from "../components/FormContainer";
import { listProductDetails, updateProduct } from "../actions/productActions";
import { PRODUCT_UPDATE_RESET } from "../constants/productConstants";
import { set } from "mongoose";

const ProductEditScreen = ({ match, history }) => {
  const productId = useParams().id;

  const [name, setName] = useState("");
  const [price, setPrice] = useState(0);
  const [image, setImage] = useState("");
  const [brand, setBrand] = useState("");
  const [category, setCategory] = useState("");
  const [countInStock, setCountInStock] = useState(0);
  const [description, setDescription] = useState("");
  const [sku, setSku] = useState("");
  const [mpn, setMpn] = useState("");
  const [longDescription, setLongDescription] = useState("");
  const [contents, setContents] = useState("");
  const [manufacturer, setManufacturer] = useState("");
  const [vat, setVat] = useState(0);

  const [supplierName, setSupplierName] = useState("");
  const [supplierPrice, setSupplierPrice] = useState(0);
  const [supplier, setSupplier] = useState({
    name: supplierName,
    price: supplierPrice,
  });
  const [suppliers, setSuppliers] = useState([
    {
      name: "Analize",
      price: 0,
      visible: true,
    },
  ]);

  const [uploading, setUploading] = useState(false);

  const dispatch = useDispatch();

  const navigate = useNavigate();

  const productDetails = useSelector((state) => state.productDetails);
  const { loading, error, product } = productDetails;

  const productUpdate = useSelector((state) => state.productUpdate);
  const {
    loading: loadingUpdate,
    error: errorUpdate,
    success: successUpdate,
  } = productUpdate;

  const [existingSuppliers, setExistingSuppliers] = useState(product.suppliers);

  console.log("product", product);
  console.log("suppliers", suppliers);
  console.log("existingSuppliers", existingSuppliers);

  const addSupplierHandler = (e) => {
    e.preventDefault();
    console.log("suppliers", suppliers);
    console.log("supplier", supplier);
    setSupplier({
      name: supplierName,
      price: supplierPrice,
    });
    setSuppliers([...suppliers, supplier]);
    dispatch(
      updateProduct({
        _id: productId,
        suppliers: [...suppliers, supplier],
      })
    );

    console.log("suppliers", suppliers);
  };

  useEffect(() => {
    if (successUpdate) {
      dispatch({ type: PRODUCT_UPDATE_RESET });
      navigate("/admin/productlist");
    } else {
      if (!product.name || product._id !== productId) {
        dispatch(listProductDetails(productId));
      } else {
        setName(product.name);
        setPrice(product.price);
        setImage(product.image);
        setBrand(product.brand);
        setCategory(product.category);
        setCountInStock(product.countInStock);
        setDescription(product.description);
        setSku(product.sku);
        setMpn(product.mpn);
        setLongDescription(product.longDescription);
        setContents(product.contents);
        setManufacturer(product.manufacturer);
        setVat(product.vat);
        setSupplier(supplier);
        setSuppliers(product.suppliers);
        setExistingSuppliers(product.suppliers);
      }
    }
  }, [dispatch, history, productId, product, successUpdate]);

  console.log("supplier", supplier);
  console.log("supplierName", supplierName);
  console.log("supplierPrice", supplierPrice);

  const uploadFileHandler = async (e) => {
    const file = e.target.files[0];
    const formData = new FormData();
    formData.append("image", file);
    setUploading(true);

    try {
      const config = {
        headers: {
          "Content-Type": "multipart/form-data",
        },
      };

      const { data } = await axios.post("/api/upload", formData, config);

      setImage(data);
      setUploading(false);
    } catch (error) {
      console.error(error);
      setUploading(false);
    }
  };

  const submitHandler = (e) => {
    e.preventDefault();

    dispatch(
      updateProduct({
        _id: productId,
        name,
        price,
        image,
        brand,
        category,
        description,
        countInStock,
        sku,
        mpn,
        longDescription,
        contents,
        manufacturer,
        vat,
        suppliers,
      })
    );
  };

  return (
    <>
      <Container>
        <Tabs
          defaultActiveKey="general"
          id="product-edit-tabs"
          className="mb-3"
        >
          <Tab eventKey="general" title="General Information">
            {loading ? (
              <Loader />
            ) : error ? (
              <Message variant="danger">{error}</Message>
            ) : (
              <Form onSubmit={submitHandler}>
                <Form.Group controlId="name">
                  <Form.Label>Name</Form.Label>
                  <Form.Control
                    type="name"
                    placeholder="Enter name"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="sku">
                  <Form.Label>SKU</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter sku"
                    value={sku}
                    onChange={(e) => setSku(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="mpn">
                  <Form.Label>MPN</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter mpn"
                    value={mpn}
                    onChange={(e) => setMpn(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="price">
                  <Form.Label>Price</Form.Label>
                  <Form.Control
                    type="number"
                    placeholder="Enter price"
                    value={price}
                    onChange={(e) => setPrice(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                {/*  <Form.Group controlId="image">
              <Form.Label>Image</Form.Label>
              <Form.Control
                type="text"
                placeholder="Enter image url"
                value={image}
                onChange={(e) => setImage(e.target.value)}
              ></Form.Control>
              <Form.File
                id="image-file"
                label="Choose File"
                custom
                onChange={uploadFileHandler}
              ></Form.File>
              {uploading && <Loader />}
            </Form.Group> */}

                {/*      <Form.Group controlId="brand">
                  <Form.Label>Brand</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter brand"
                    value={brand}
                    onChange={(e) => setBrand(e.target.value)}
                  ></Form.Control>
                </Form.Group> */}
                {/* 
                <Form.Group controlId="countInStock">
                  <Form.Label>Count In Stock</Form.Label>
                  <Form.Control
                    type="number"
                    placeholder="Enter countInStock"
                    value={countInStock}
                    onChange={(e) => setCountInStock(e.target.value)}
                  ></Form.Control>
                </Form.Group>
 */}
                <Form.Group controlId="category">
                  <Form.Label>Category</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter category"
                    value={category}
                    onChange={(e) => setCategory(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="description">
                  <Form.Label>Description</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter description"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="longDescription">
                  <Form.Label>Long description</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter long description"
                    value={longDescription}
                    onChange={(e) => setLongDescription(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="vat">
                  <Form.Label>VAT Percentage</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter vat percentage"
                    value={vat}
                    onChange={(e) => setVat(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="manufacturer">
                  <Form.Label>Manufacturer</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter manufacturer"
                    value={manufacturer}
                    onChange={(e) => setManufacturer(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Form.Group controlId="contents">
                  <Form.Label>Package contents</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Enter package contents"
                    value={contents}
                    onChange={(e) => setContents(e.target.value)}
                  ></Form.Control>
                </Form.Group>

                <Button type="submit" variant="primary">
                  Update
                </Button>
              </Form>
            )}
          </Tab>
          <Tab eventKey="suppliers" title="Suppliers">
            {loading ? (
              <Loader />
            ) : error ? (
              <Message variant="danger">{error}</Message>
            ) : (
              <>
                <h4>Suppliers</h4>

                <Table striped bordered hover responsive className="table-sm">
                  <thead>
                    <tr>
                      <th>Supplier Name</th>
                      <th>Supplier Price</th>
                    </tr>
                  </thead>
                  <tbody>
                    {suppliers.map((supplier) => (
                      <tr key={supplier._id}>
                        <td>{supplier.name}</td>
                        <td>{supplier.price}</td>
                      </tr>
                    ))}
                  </tbody>
                </Table>

                <Form>
                  <h4>Add a Supplier</h4>

                  <Form.Group controlId="supplierName">
                    <Form.Label>Supplier Name</Form.Label>
                    <Form.Control
                      as="select"
                      onChange={(e) => setSupplierName(e.target.value)}
                      value={supplierName}
                    >
                      <option value="Analize">Analize</option>
                      <option value="Unidentas">Unidentas</option>
                    </Form.Control>
                  </Form.Group>

                  <Form.Group controlId="supplierPrice">
                    <Form.Label>Supplier Price</Form.Label>
                    <Form.Control
                      type="number"
                      placeholder="Enter supplier price"
                      value={supplierPrice}
                      onChange={(e) => setSupplierPrice(e.target.value)}
                    ></Form.Control>
                  </Form.Group>

                  <button
                    onClick={addSupplierHandler}
                    type="submit"
                    className="btn btn-primary"
                  >
                    Add Supplier
                  </button>
                  <Button type="submit" variant="primary">
                    Update
                  </Button>
                </Form>
              </>
            )}
          </Tab>
          <Tab eventKey="images" title="Images" disabled>
            <div>images</div>
          </Tab>
        </Tabs>
      </Container>
    </>
  );
};

const Container = styled.div`
  width: 100%;
`;

export default ProductEditScreen;
